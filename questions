var obj = {
	num: 'aaa',
	fn:function(){
		console.log(this);
		var fn1=function(){
			console.log(this);
			setTimeout(()=>{
				console.log(this)
			})
		}
		fn1();
	}
}
obj.fn();

var obj = {
	num: 'aaa',
	fn:function(){
		console.log(this);
		var fn1=() => {
			console.log(this);
			setTimeout(() => {
				console.log(this)
			})
		}
		fn1();
	}
}
obj.fn();

async function async1() {
    console.log("1");
    await  async2();
    console.log("2");
}
async  function async2() {
   console.log( '3');
}
async1();
console.log("4");
setTimeout(function () {
    console.log("5");
},0);
new Promise(function (resolve) {
    console.log("6");
    resolve();
}).then(function () {
    console.log("7");
});
console.log('8');
 // --> 4 1 3 6 8 7 2 5
  
  
(function() {
	var a = b = 1;
}())
console.log(a !== 'undefined'); //false
console.log(b !== 'undefined'); //true

function Foo() {
	getName = function() { console.log(1); };
	return this;
}
Foo.getName = function() { console.log(2); };
Foo.prototype.getName = function() { console.log(3); };
var getName = function() { console.log(4); };
function getName() { console.log(5); };
Foo.getName(); //2
getName(); // 4
Foo().getName(); // 1
getName(); // 1
new Foo.getName(); // 2
new Foo().getName(); // 3
new new Foo().getName(); // 3
  
function fn() {
	y = function() {
		X = 2;
	};
	return function() {
		var x = 3;
		y();
		console.log(this.X); 
	}.apply(this, arguments);
}
fn();//2

var length = 10;
function fn() {
	console.log(this.length);
}
var obj = {
	length: 5,
	methods: function(fn) {
		fn(); 
		arguments[0](); 
	}
}
obj.methods(fn, 1);
  
//冒泡排序
var arr = [2, 1, 4, 6, 5, 7, 2];
function sort(arr) {
	var len = arr.length,
	    temp;
	for(var i = len; i>= 2; i--) {
		for(var j = 0; j < i - 1; j++) {
			if(arr[j+1] < arr[j]) {
				temp = arr[j];
				arr[j] = arr[j+1];
				arr[j+1] = temp;
			}
		}
	}
	return arr;
}

var arr2 = sort(arr);
var arr3 = arr2.reverse();


var dad = {};
var son = {};
function show() {
	return this;
}

var newShow = show.bind(dad);
var newShow1 = newShow.bind(son);
console.log(newShow() == dad);
console.log(newShow1() == son);

console.log(1 + '2' + '2' );
console.log(1 + + '2' + '2');
console.log(1 + - '1' + '2');
console.log(+ '1' + '1' + '2');
console.log('A' - 'B' + '2');
console.log('A' - 'B' + 2);

